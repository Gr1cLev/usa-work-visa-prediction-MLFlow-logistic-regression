name: Retrain, Publish Docs, Deploy Space

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 1"

permissions:
  contents: write

jobs:
  retrain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -r requirements.txt
          python -V
          pip show pandas scikit-learn evidently openpyxl || true

      - name: Run pipeline
        env:
          DATAGOV_API_KEY: ${{ secrets.DATAGOV_API_KEY }}
        run: |
          set -e
          python -m src.data.ingest
          python -m src.data.validate || true
          python -m src.features.build_features
          python -m src.models.train
          python -m src.models.evaluate
          python -m src.monitoring.generate_report
          echo "=== AFTER PIPELINE ==="
          ls -lah artifacts || true
          ls -lah docs || true
          test -f artifacts/model.joblib
          test -f docs/eval.json
          test -f docs/report.html

      - name: Gate if F1 < 0.70
        run: |
          python - <<'PY'
          import json, os, sys

          p = 'docs/eval.json'
          if not os.path.exists(p):
              print('eval.json missing')
              sys.exit(1)

          with open(p, 'r', encoding='utf-8') as f:
              metrics = json.load(f)

          print('Available metrics:', [k for k in metrics.keys() if k.startswith('f1_')])

          def pick_first(values):
              for v in values:
                  if isinstance(v, (int, float)):
                      return float(v)
              return 0.0

          f1 = pick_first([
              metrics.get('f1_positive'),
              metrics.get('f1_weighted'),
              metrics.get('f1_macro'),
              metrics.get('f1'),
          ])

          print('Selected F1 =', f1)
          sys.exit(0 if f1 >= 0.70 else 1)
          PY

      - name: Commit docs & model
        run: |
          mkdir -p serving
          cp -f artifacts/model.joblib serving/model.joblib
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add docs/eval.json docs/report.html serving/model.joblib || true
          git diff --cached --quiet || git commit -m "auto: retrain, publish, update model"
          git push

  deploy-space:
    needs: retrain
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: huggingface/hub-actions@v1
        with:
          repo-id: ${{ secrets.HF_SPACE_REPO }}
          token: ${{ secrets.HF_TOKEN }}
          folder: ./serving
          space-sdk: docker
          commit-message: "update space"
